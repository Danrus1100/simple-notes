const themeToggle = document.getElementById('themeToggle');
const noteInput = document.getElementById('noteInput');
const noteTitle = document.getElementById('noteTitle');
const wordCount = document.getElementById('wordCount');
const saveNote = document.getElementById('saveNote');
const notesList = document.getElementById('notesList');
const newNoteBtn = document.getElementById('newNote');
const markdownPreview = document.getElementById('markdownPreview');

// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const sidebarToggle = document.getElementById('sidebarToggle');
const sidebar = document.getElementById('sidebar');
const editorToggle = document.getElementById('editorToggle');
const previewToggle = document.getElementById('previewToggle');
const editorView = document.getElementById('editorView');
const previewView = document.getElementById('previewView');

const viewToggle = document.getElementById('viewToggle');
const statsToggle = document.getElementById('statsToggle');
const statsPanel = document.getElementById('statsPanel');

let notes = JSON.parse(localStorage.getItem('notes') || '[]');
let currentNoteId = null;

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é Markdown
function updatePreview() {
    markdownPreview.innerHTML = marked.parse(noteInput.value);
}

// –ü–æ–¥—Å—á—ë—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateStats() {
    const text = noteInput.value;
    const trimmedText = text.trim();

    // –ü–æ–¥—Å—á—ë—Ç —Å–ª–æ–≤
    const words = trimmedText ? trimmedText.split(/\s+/).length : 0;
    wordCount.textContent = words;

    // –ü–æ–¥—Å—á—ë—Ç —Å–∏–º–≤–æ–ª–æ–≤
    document.getElementById('charCount').textContent = text.length;

    // –ü–æ–¥—Å—á—ë—Ç —Å–∏–º–≤–æ–ª–æ–≤ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤
    document.getElementById('charNoSpaceCount').textContent = text.replace(/\s/g, '').length;

    // –ü–æ–¥—Å—á—ë—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
    const sentences = trimmedText ? trimmedText.split(/[.!?]+/).filter(Boolean).length : 0;
    document.getElementById('sentenceCount').textContent = sentences;

    // –ü–æ–¥—Å—á—ë—Ç –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤
    const paragraphs = trimmedText ? trimmedText.split(/\n\s*\n/).filter(Boolean).length : 0;
    document.getElementById('paragraphCount').textContent = paragraphs;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏
function saveNoteToList() {
    const title = noteTitle.value.trim() || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
    const text = noteInput.value.trim();
    
    if (!text) return;

    if (currentNoteId === null) {
        // –ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞
        const note = {
            id: Date.now(),
            title,
            text,
            created: new Date().toISOString()
        };
        notes.unshift(note);
        currentNoteId = note.id;
    } else {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–º–µ—Ç–∫–∏
        const note = notes.find(n => n.id === currentNoteId);
        if (note) {
            note.title = title;
            note.text = text;
        }
    }

    localStorage.setItem('notes', JSON.stringify(notes));
    renderNotesList();
}

// –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ –∑–∞–º–µ—Ç–æ–∫
function renderNotesList() {
    notesList.innerHTML = notes.map(note => `
        <div class="tab-item ${note.id === currentNoteId ? 'active' : ''}" 
             data-id="${note.id}">
            ${note.title}
        </div>
    `).join('');

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
    document.querySelectorAll('.tab-item').forEach(tab => {
        tab.addEventListener('click', () => loadNote(parseInt(tab.dataset.id)));
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–º–µ—Ç–∫–∏
function loadNote(id) {
    const note = notes.find(n => n.id === id);
    if (note) {
        currentNoteId = id;
        noteTitle.value = note.title;
        noteInput.value = note.text;
        updateStats();
        updatePreview();
        renderNotesList();
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏
function createNewNote() {
    currentNoteId = null;
    noteTitle.value = '';
    noteInput.value = '';
    updateStats();
    updatePreview();
    renderNotesList();
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–∞–π–¥–±–∞—Ä–∞
function toggleSidebar() {
    sidebar.classList.toggle('visible');
}

// –ó–∞–º–µ–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ toggleView
function toggleView() {
    const isPreview = viewToggle.checked;
    if (!isPreview) {
        editorView.classList.remove('hidden');
        previewView.classList.add('hidden');
    } else {
        editorView.classList.add('hidden');
        previewView.classList.remove('hidden');
        updatePreview();
    }
}

function toggleStats() {
    statsPanel.classList.toggle('hidden');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.body.setAttribute('data-theme', savedTheme);
    
    if (notes.length > 0) {
        loadNote(notes[0].id);
    }
    
    renderNotesList();

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∑–∞–º–µ—Ç–∫—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    if (window.innerWidth <= 768) {
        sidebar.classList.remove('visible');
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
themeToggle.addEventListener('click', () => {
    const isDark = document.body.getAttribute('data-theme') === 'dark';
    document.body.setAttribute('data-theme', isDark ? 'light' : 'dark');
    localStorage.setItem('theme', isDark ? 'light' : 'dark');
    themeToggle.textContent = isDark ? 'üåô' : '‚òÄÔ∏è';
});

noteInput.addEventListener('input', () => {
    updateStats();
    updatePreview();
});

saveNote.addEventListener('click', saveNoteToList);
newNoteBtn.addEventListener('click', createNewNote);

sidebarToggle.addEventListener('click', toggleSidebar);
viewToggle.addEventListener('change', toggleView);
statsToggle.addEventListener('click', toggleStats);

// –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∞–π–¥–±–∞—Ä –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∑–∞–º–µ—Ç–∫—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
notesList.addEventListener('click', (e) => {
    if (window.innerWidth <= 768 && e.target.classList.contains('tab-item')) {
        sidebar.classList.remove('visible');
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–∞–Ω–µ–ª–∏
document.addEventListener('click', (e) => {
    if (!statsPanel.contains(e.target) && e.target !== statsToggle) {
        statsPanel.classList.add('hidden');
    }
});
